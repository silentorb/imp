Traveler {

    Planets {

        Output<T> {
            get_value():T
            targets:Input<T>[]
        }

        Input<T> {
            set_value(value:T)
            source:Output<T>
        }
    }

    Pathways {

        static changed<T>(output:Planets.Output<T>, value:T) {
            if (output.targets == null)
                return

            for (var target in output.targets) {
                target.set_value(value)
            }
        }

        static connect<T>(output:Planets.Output<T>, input:Planets.Input<T>) {
            if (input.source == output)
                return

            if (output.targets == null)
                output.targets = []

            input.source = output
            output.targets.push(input)

            input.set_value(output.get_value())
        }

        static sequence(list:any[]) {
            var i = 0
            while (i < list.count - 1) {
                travel.connect(list[i], list[i + 1])
                i += 1
            }
        }
    }
}